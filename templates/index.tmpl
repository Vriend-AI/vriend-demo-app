<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Demo App | Vriend</title>
    <link rel="stylesheet" href="/public/styles.css">
  </head>
  <body>
    <!-- Alpine.js App with proper cloak handling -->
    <div
      id="app"
      x-data="authApp()"
      x-init="init(); $nextTick(() => document.body.classList.add('alpine-ready'))"
      class="alpine-content"
      x-cloak
    >
      <!-- Loading State -->
      <div x-show="isLoading" class="container">
        <div class="spinner"></div>
        <p>Checking authentication...</p>
      </div>

      <!-- Login Screen -->
      <div x-show="!isAuthenticated && !isLoading" class="container">
        <h1 class="title">Welcome to the Demo App</h1>
        <p class="subtitle">Please sign in to continue.</p>
        <p>
          <a :href="loginURL" class="signin-btn" rel="noopener">
            <img
              src="https://cdn.vriend.ai/images/vriend-icon-white.png"
              alt="Vriend Inc. Icon"
              @error="$event.target.style.display='none'"
            />
            <span>
              Sign in with
              <em style="font-style: normal; font-weight: 800">Vriend ID</em>
            </span>
          </a>
        </p>
      </div>

      <!-- Authenticated Screen -->
      <div x-show="isAuthenticated && !isLoading" class="container">
        <!-- Header with logout button -->
        <div class="container-header">
          <button class="btn-logout-header" @click="logout()">Logout</button>
        </div>
        
        <h1 class="title">Welcome, you are logged in!</h1>
        <p class="subtitle">You now have access to protected resources.</p>

        <!-- Tabs -->
        <div class="tabs-container">
          <div class="tab-buttons">
            <button
              class="tab-button"
              :class="{ active: activeTab === 'info' }"
              @click="setActiveTab('info')"
            >
              User Info
            </button>
            <button
              class="tab-button"
              :class="{ active: activeTab === 'stress' }"
              @click="setActiveTab('stress')"
            >
              Stress Levels
            </button>
          </div>

          <!-- Info Tab Content -->
          <div class="tab-content" :class="{ active: activeTab === 'info' }">
            <button
              class="btn"
              @click="fetchUserInfo()"
              :disabled="isLoadingInfo"
            >
              <span x-show="!isLoadingInfo">Fetch User Info</span>
              <span x-show="isLoadingInfo">Loading...</span>
            </button>
            <pre
              x-show="userInfo"
              class="api-response"
              x-text="'User Info API response:\n' + JSON.stringify(userInfo, null, 2)"
            ></pre>
            <pre
              x-show="infoError"
              class="api-response"
              x-text="'Info API error: ' + infoError"
            ></pre>
          </div>

          <!-- Stress Levels Tab Content -->
          <div class="tab-content" :class="{ active: activeTab === 'stress' }">
            <button
              class="btn"
              @click="fetchStressLevels()"
              :disabled="isLoadingStress"
            >
              <span x-show="!isLoadingStress">Fetch Stress Levels</span>
              <span x-show="isLoadingStress">Loading...</span>
            </button>
            <pre
              x-show="stressLevels"
              class="api-response"
              x-text="'Stress Levels API response:\n' + JSON.stringify(stressLevels, null, 2)"
            ></pre>
            <pre
              x-show="stressError"
              class="api-response"
              x-text="'Stress API error: ' + stressError"
            ></pre>
          </div>
        </div>
      </div>
    </div>

    <!-- JavaScript Dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="//unpkg.com/alpinejs" defer></script>

    <script>
      // Alpine.js app data and methods
      function authApp() {
        return {
          // State
          isAuthenticated: false,
          isLoading: true,
          userInfo: null,
          stressLevels: null,
          apiError: null,
          infoError: null,
          stressError: null,
          isLoadingInfo: false,
          isLoadingStress: false,
          activeTab: "info",
          loginURL: "{{ .LoginURL }}",

          // API clients
          vriendAPI: axios.create({
            baseURL: "{{ .VriendAPIURL }}",
            headers: { "Content-Type": "application/json" },
            withCredentials: true,
          }),

          localAPI: axios.create({
            baseURL: window.location.origin,
            withCredentials: true,
          }),

          // Methods
          async init() {
            await this.checkAuthStatus();
          },

          async checkAuthStatus() {
            try {
              this.isLoading = true;
              this.apiError = null;

              const response = await this.vriendAPI.get("/info");

              this.userInfo = response.data;
              this.isAuthenticated = true;
            } catch (error) {
              this.isAuthenticated = false;
              this.userInfo = null;
              this.apiError = error.message || "Authentication failed";
            } finally {
              this.isLoading = false;
            }
          },

          setActiveTab(tab) {
            this.activeTab = tab;
          },

          async fetchUserInfo() {
            try {
              this.isLoadingInfo = true;
              this.infoError = null;

              const response = await this.vriendAPI.get("/info");
              this.userInfo = response.data;
            } catch (error) {
              this.userInfo = null;
              this.infoError = error.message || "Failed to fetch user info";
            } finally {
              this.isLoadingInfo = false;
            }
          },

          async fetchStressLevels() {
            try {
              this.isLoadingStress = true;
              this.stressError = null;

              const response = await this.vriendAPI.get(
                "/wellness/stresslevels"
              );
              this.stressLevels = response.data;
            } catch (error) {
              this.stressLevels = null;
              this.stressError =
                error.message || "Failed to fetch stress levels";
            } finally {
              this.isLoadingStress = false;
            }
          },

          async logout() {
            try {
              await this.localAPI.get("/logout");
            } catch (error) {
              console.error("Logout error:", error);
            } finally {
              // Always reset auth state
              this.isAuthenticated = false;
              this.userInfo = null;
              this.stressLevels = null;
              this.apiError = null;
              this.infoError = null;
              this.stressError = null;
              this.isLoadingInfo = false;
              this.isLoadingStress = false;
              this.activeTab = "info";
            }
          },
        };
      }
    </script>

    <!-- Copyright Footer -->
    <div class="copyright">
      &copy; <span id="copyright-year"></span>
      <a href="https://vriend.ai" target="_blank" rel="noopener noreferrer"
        >Vriend Inc.</a
      >
    </div>

    <script>
      // Set current year dynamically
      document.getElementById("copyright-year").textContent =
        new Date().getFullYear();
    </script>
  </body>
</html>
